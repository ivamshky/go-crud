openapi: 3.0.0
info:
  title: User API
  version: "1.0"
  description: Simple User management API

servers:
  - url: http://localhost:8080

paths:
  /user/{userId}:
    get:
      summary: Get user by ID
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: Numeric ID of the user to get
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

    delete:
      summary: Delete user by ID
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: Numeric ID of the user to delete
      responses:
        '200':
          description: Successfully deleted (no body)

  /user:
    get:
      summary: List users
      security:
        - basicAuth: []
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Filter by user name
        - in: query
          name: email
          schema:
            type: string
          description: Filter by user email
        - in: query
          name: id
          schema:
            type: integer
          description: Filter by user ID
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
          description: Max number of users to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: Number of users to skip for pagination
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

    post:
      summary: Create user
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
      responses:
        '200':
          description: Created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: Basic Authentication using username and password
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: John Doe
        email:
          type: string
          example: johndoe@example.com
        age:
          type: integer
          example: 30
      required: [id, name, email, age]

    UserCreateRequest:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        email:
          type: string
          example: johndoe@example.com
        age:
          type: integer
          example: 30
      required: [name, email, age]
